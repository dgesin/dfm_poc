<?php
/* 
 * 'The Count' XML Creator { includes/db.php }
 * Author: Jonathan Boho
 * Created: Jan 10, 2011
 * Modifed: March 2, 2011
 * This file creates a MySQL database object.
*/
require_once("config.php");
require_once("exceptions.php");

class Database
{
	public $last_query;
	protected $dbh; // database handler
	private $magic_quotes_active;
	private $real_escape_string_exists;
		
	public function __construct() {
		$this->open();
		$this->magic_quotes_active = get_magic_quotes_gpc();
		$this->real_escape_string_exists = function_exists("mysql_real_escape_string");
	}
	
	protected function open() {
		$this->dbh = mysql_connect(DB_SERVER, DB_USER, DB_PASS); 
		if (!is_resource($this->dbh)) {
			throw new MySQLException;
		}
		if (!mysql_select_db(DB_NAME, $this->dbh)) {
			throw new MySQLException;
		}		
	}

	public function close() {	
		if(isset($this->dbh)) {
			mysql_close($this->dbh);
			unset($this->dbh);
		}
	}	
	
	public function execute($query) {
		$this->last_query = $query;
		if(!$this->dbh) {
			$this->open();
		}
		$result = mysql_query($query, $this->dbh);
		if(!$result) {
			throw new MySQLException;
		}
		else if(!is_resource($result)) {
			return true;
		}
		else {
			$stmt = new DB_Statement($this->dbh, $query);
			$stmt->result = $result;
			return $stmt;
		}
	}

	// cleans input to prevent SQL injection.
	// also checks for PHP version and adopts appropriate technique for escaping values	
 	public function escape_value($value) {
		if( $this->real_escape_string_exists ) {
			if( $this->magic_quotes_active ) { $value = stripslashes( $value ); }
			$value = mysql_real_escape_string( $value );
		}
		else { 
			if( !$this->magic_quotes_active ) { $value = addslashes( $value ); }
		}
		return $value;
	}
	
	// this function returns the num of rows in a query.
	// if the second argument is true, the function will return an actual number, else it will return a Boolean value.
	public function num_rows($return_num = true) {
		$rows = mysql_num_rows($this->dbh); 
		if ($return_num) { // if return_num is true (default)
			return $rows; // return the number of rows
		}
		else {
			return ($rows>0) ? true: false; // if there are rows returned, return boolean
		}
	}

	public function affected_rows() {
    	return mysql_affected_rows($this->dbh);
	}

	public function insert_id() {
		return mysql_insert_id($this->dbh);
	}
	
	public function count_all($table_name) {
		return array_shift(mysql_fetch_array(mysql_query("SELECT COUNT(*) FROM {$table_name};")));
	}		
	
}

$database = new Database();
$db =& $database;

?>